@using WebApplication7_CountdownTimerAPI.Models;
@{
    ViewData["Title"] = "Home page";
    Layout = "_Layout";
    var list = ViewData["List"] as List<object>;
}
@section Styles
    {
    <style>
        #datetimepicker {
            background: rgba(68, 68, 68, 0.65);
            color: #DD5500;
            font-weight: bolder;
            font-size: 26px;
            text-align: center;
        }

        .timer-container {
            font-family: 'Orbitron', sans-serif;
            font-size: 100px;
            color: rgba(0, 205, 62, 0.75);
        }

        .my-button {
            width: 5vw;
            height: 5vh;
            background-color: rgba(68, 68, 68, 0.65);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            font-size: 26px;
        }

        .fav-btn-list {
            --b: 3px; /* border thickness */
            --s: .45em; /* size of the corner */
            --color: #DD5500;
            padding: calc(.5em + var(--s)) calc(.9em + var(--s));
            color: var(--color);
            --_p: var(--s);
            background: conic-gradient(from 90deg at var(--b) var(--b),#0000 90deg,var(--color) 0) var(--_p) var(--_p)/calc(100% - var(--b) - 2*var(--_p)) calc(100% - var(--b) - 2*var(--_p));
            transition: .3s linear, color 0s, background-color 0s;
            outline: var(--b) solid #0000;
            outline-offset: .6em;
            font-size: 16px;
            border: 0;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }

            .fav-btn-list:hover,
            .fav-btn-list:focus-visible {
                --_p: 0px;
                outline-color: var(--color);
                outline-offset: .05em;
            }

            .fav-btn-list:active {
                background: var(--color);
                color: #fff;
            }

        .container {
            display: flex;
            align-items: center;
            flex-direction: row;
            justify-content: center;
        }

        .main-div {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .fav img, .start img, .stop img {
            object-fit: contain;
            vertical-align: middle;
            height: 3vh;
        }

        table {
            border: 1px solid gray;
            border-collapse: collapse;
        }

        .table {
            color: gray;
            caption-side: top;
        }

        th, td {
            border: 1px solid gray;
        }

        .my-pad {
            padding-block: 20px;
        }

        #selected-date-time {
            color: white;
        }

        .fav-div {
            color: #DD5500;
        }

        .btn-div {
            display: flex;
            gap: 5px;
        }

        #fav-list {
            margin-left: 10px;
            list-style: none;
            padding-left: 5px;
        }

            #fav-list li {
                display: flex;
                align-items: center;
                padding: .5rem;
            }

                #fav-list li::before {
                    content: "";
                    width: 40px;
                    height: 40px;
                    margin-right: 1rem;
                    background-image: url(/svg/clock.svg);
                }

        #history-btn {
            appearance: button;
            /* background-color: #000; */
            background-color: rgba(68, 68, 68, 0.65);
            background-image: none;
            border: 1px solid #DD5500;
            border-radius: 4px;
            box-shadow: #DD5500 4px 4px 0 0, #DD5500 4px 4px 0 1px;
            box-sizing: border-box;
            color: black;
            cursor: pointer;
            display: inline-block;
            font-family: ITCAvantGardeStd-Bk,Arial,sans-serif;
            font-size: 16px;
            font-weight: 400;
            line-height: 20px;
            margin: 0 5px 10px 0;
            overflow: visible;
            padding: 12px 40px;
            text-align: center;
            text-transform: none;
            touch-action: manipulation;
            user-select: none;
            -webkit-user-select: none;
            vertical-align: middle;
            white-space: nowrap;
            width: 15vw;
        }

            #history-btn:focus {
                text-decoration: none;
            }

            #history-btn:hover {
                text-decoration: none;
            }

            #history-btn:active {
                box-shadow: rgba(0, 0, 0, .125) 0 3px 5px inset;
                outline: 0;
            }

            #history-btn:not([disabled]):active {
                box-shadow: #843300 2px 2px 0 0, #000 2px 2px 0 1px;
                transform: translate(2px, 2px);
            }

        #history-div {
            display: none;
        }

        .del-button {
            width: 40px;
            max-width:40px;
            margin-left: 15px;
            align-items: center;
            /* background-color: #fff; */
            background: url(/svg/bin.svg);
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            border-radius: 12px;
            box-shadow: transparent 0 0 0 3px,rgba(18, 18, 18, .1) 0 6px 20px;
            box-sizing: border-box;
            color: #121212;
            cursor: pointer;
            display: inline-flex;
            flex: 1 1 auto;
            font-family: Inter,sans-serif;
            font-size: 1.2rem;
            font-weight: 700;
            justify-content: center;
            line-height: 1;
            /* margin: 0; */
            outline: none;
            padding: 1rem 1.2rem;
            text-align: center;
            text-decoration: none;
            transition: box-shadow .2s,-webkit-box-shadow .2s;
            white-space: nowrap;
            border: 0;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }

            .del-button:hover {
                box-shadow: #a90000 0px 2px 0px, transparent 0 0 0 0;
        }
           

    </style>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
}
<div class="main-div">
    <div>
        @* <input class="timepicker" id="picker"/> *@
        <input id="datetimepicker" type="text">
    </div>
    <div class="timer-container" id="timer">
        --:--
    </div>
    <div class="btn-div">
        <button id="start-btn" class="my-button start">
            <img src="~/svg/play.svg" alt="play" />
        </button>
        <button id="stop-btn" class="my-button stop">
            <img src="~/svg/stop.svg" alt="stop" />
        </button>
        <button id="favorite-btn" class="my-button fav">
            <img src="~/svg/star.svg" alt="star" />
        </button>
    </div>
    <div>
        <audio id="track" src="~/audio/telephone_ring.wav">
            @* <p>Your browser does not support the audio element</p> *@
        </audio>
    </div>
    <div class="fav-div">
        Favorites timers:
        <ul id="fav-list"></ul>
    </div>
    <button id="history-btn">Show History</button>
    <div class="my-pad" id="history-div">
        <table class="table">
            <caption>
                Last 5 countdowns:
            </caption>
            <thead>
                <tr>
                    <th scope="col">Start time</th>
                    <th scope="col">Event time</th>
                    <th scope="col">Duration planned</th>
                    <th scope="col">Duration performed</th>
                </tr>
            </thead>
            <tbody id="record-table-body">
            </tbody>
        </table>
    </div>
    @* <div id="selected-date-time"></div> *@
    @* <div>
        <table>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Date</th>
            </tr>
            <tbody id="countdown-objects"></tbody>
        </table>
    </div> *@
  
</div>

@section Scripts{
    <script src="~/js/LoginRegister.js"></script>
    <script>
        // var eventDuration = 0;
        // var interval = 1000;
        // var intervalId;     // variable to clearInterval()
        // var audio = document.getElementById("track");
        // var countdownList = [];
        // var favList = [];
        // let selectedDateTime;
        // window.onload = loadData();

        // var countdownModel = { startTime: "--:--", eventTime: "--:--", durationPlan: "0s", durationPerformed: "0s" };
        // var favModel = { eventTime: "--:--", title: "" };
        // const table = document.getElementById('record-table-body');
        // fillTable();
        // FillFavorites();

        // $('#start-btn').on("click", function () {
        //     clearInterval(intervalId);
        //     //console.log("cleared from click");

        //     console.log("selectedDateTime", selectedDateTime);
        //     var endTime = moment(selectedDateTime, "DD.MM.YYYY HH:mm");
        //     console.log("endTime", endTime);
        //     if (!endTime.isValid()) {
        //         console.log("DATE NOT VALID");
        //     }

        //     var currentTime = moment(new Date());
        //     console.log("currentTime", currentTime);

        //     var timerDuration = moment.duration(endTime.diff(currentTime));   // difference between finish & start
        //     // var hours = timerDuration.asHours();
        //     var seconds = timerDuration.asSeconds();

        //     eventDuration = moment.duration(seconds, 'seconds');

        //     countdownModel.startTime = currentTime.format('YYYY-MM-DD HH:mm:ss');
        //     countdownModel.eventTime = endTime.format('YYYY-MM-DD HH:mm:ss');
        //     countdownModel.durationPlan = eventDuration.days() + ' d : ' + eventDuration.hours() + ' h : ' + eventDuration.minutes() + ' m : ' + eventDuration.seconds() + ' s';
        //     console.log("countdownModel", countdownModel);

        //     intervalId = window.setInterval(function () {
        //         console.log('Start setInterval func')
        //         // Time Out check
        //         if (eventDuration.asSeconds() <= 0) {
        //             clearInterval(intervalId);
        //             console.log("cleared from func timeStart");
        //             audio.play();
        //             $('#timer').text('--:--');
        //             countdownModel.durationPerformed = countdownModel.durationPlan;
        //             addCountdownToList();
        //             var millisecondsToWait = 1200;  // length of audio
        //             setTimeout(function () {
        //                 window.location.reload(true); //#skip the cache and reload the page from the server
        //             }, millisecondsToWait);
        //         }

        //         //Otherwise
        //         eventDuration = moment.duration(eventDuration.asSeconds() - 1, 'seconds');
        //         $('#timer').text(eventDuration.days() + ' d : ' + eventDuration.hours() + ' h : ' + eventDuration.minutes() + ' m : ' + eventDuration.seconds() + ' s');

        //     }, interval);
        // });

        // $('#stop-btn').on("click", function () {
        //     clearInterval(intervalId);
        //     audio.play();
        //     let abortedDuration = eventDuration.days() + ' d : ' + eventDuration.hours() + ' h : ' + eventDuration.minutes() + ' m : ' + eventDuration.seconds() + ' s';
        //     countdownModel.durationPerformed = abortedDuration;
        //     addCountdownToList();
        //     eventDuration = 0;
        //     $('#timer').text("--:--");
        //     table.innerHTML = "";
        //     loadData();
        //     fillTable();
        // });

        // $('#favorite-btn').on("click", function () {
        //     if (selectedDateTime !== undefined) {
        //         //check if time unique
        //         if (favList.filter(f => f.eventTime == favModel.eventTime).length == 0) {
        //             //add title
        //             Swal.fire({
        //                 title: "Title",
        //                 input: 'text',
        //                 icon: 'info',
        //                 showCancelButton: true,
        //                 confirmButtonText: 'Save',
        //                 confirmButtonColor: '#3c4cc8'
        //             }).then((result) => {
        //                 if (result.isConfirmed) {
        //                     favModel.title = result.value;
        //                     saveFavorite();
        //                     console.log("unique time");
        //                 }
        //             })
        //         }
        //         else {
        //             console.log("NOT unique time");
        //         }
        //     }
        // });

        // jQuery('#datetimepicker').datetimepicker({
        //     format: 'd.m.Y H:i',
        //     // format: 'Y.m.d H:i',
        //     // inline: true,
        //     lang: 'en',
        //     theme: 'dark',
        //     onChangeDateTime: function (dp, $input) {
        //         selectedDateTime = $input.val();
        //         $('#selected-date-time').text($input.val());
        //         console.log("trigger change!!!");
        //         console.log("input", $input.val());
        //         console.log("dp", dp);
        //         var dt = moment($input.val(), "DD.MM.YYYY HH:mm");
        //         var time = dt.format('HH:mm');
        //         console.log("time", time);
        //         favModel.eventTime = time;
        //     }
        // });

        // $('#history-btn').on("click", function () {
        //     let history = $('#history-div');
        //     let state = history.css("display");
        //     if (state == "none") {
        //         history.show();
        //     } else {
        //         history.hide();
        //     }
        // });

        // function loadData() {
        //     let countdownData = JSON.parse(localStorage.getItem("countdowns"));
        //     if (countdownData !== null) {
        //         countdownList = countdownData;
        //     }
        //     else {
        //         countdownList = [];
        //     }
        //     console.log("countdownList", countdownList);
        //     let favData = JSON.parse(localStorage.getItem("favorites"));
        //     if (favData !== null) {
        //         favList = favData;
        //     }
        //     else {
        //         favList = [];
        //     }
        //     console.log("favList", favList);
        // }
        // function saveData() {
        //     let localCountdowns = JSON.stringify(countdownList);
        //     localStorage.setItem("countdowns", localCountdowns);
        // }
        // function saveFavorite() {
        //     // add to list
        //     favList.push(favModel);
        //     let localFavorites = JSON.stringify(favList);
        //     localStorage.setItem("favorites", localFavorites);
        // }
        // function fillTable() {
            // let lastFive = countdownList.slice(Math.max(countdownList.length - 5, 0));

            // lastFive.forEach(countdown => {

            //     let row = table.insertRow();

            //     let startTime = row.insertCell(0);
            //     startTime.innerHTML = countdown.startTime;
            //     let eventTime = row.insertCell(1);
            //     eventTime.innerHTML = countdown.eventTime;
            //     let durationPlan = row.insertCell(2);
            //     durationPlan.innerHTML = countdown.durationPlan;
            //     let durationPerformed = row.insertCell(3);
            //     durationPerformed.innerHTML = countdown.durationPerformed;
            // })
        // }
        // function FillFavorites() {
        //     let lastThree = favList.slice(Math.max(favList.length - 5, 0));
        //     var ul = document.getElementById("fav-list");

        //     lastThree.forEach(fav => {
        //         var button = document.createElement("button");
        //         button.textContent = fav.eventTime + ' "' + fav.title + '"';
        //         button.classList.add("fav-btn-list");
        //         var li = document.createElement("li");
        //         li.appendChild(button);
        //         ul.appendChild(li);
        //         button.addEventListener('click', () => {
        //             var favTime = moment(fav.eventTime, "HH:mm");
        //             var formatted = setDateTime(favTime);
        //             console.log("favTime", favTime);
        //             jQuery('#datetimepicker').datetimepicker('setOptions', { value: formatted });
        //             selectedDateTime = formatted;
        //             $('#selected-date-time').text(formatted);
        //             var dt = moment(formatted, "DD.MM.YYYY HH:mm");
        //             var time = dt.format('HH:mm');
        //             console.log("time", time);
        //             favModel.eventTime = time;
        //         });
        //         button.addEventListener('dblclick', () => {
        //             var favTime = moment(fav.eventTime, "HH:mm");
        //             var formatted = setDateTime(favTime);
        //             console.log("favTime", favTime);
        //             jQuery('#datetimepicker').datetimepicker('setOptions', { value: formatted });
        //             selectedDateTime = formatted;
        //             $('#selected-date-time').text(formatted);
        //             var dt = moment(formatted, "DD.MM.YYYY HH:mm");
        //             var time = dt.format('HH:mm');
        //             console.log("time", time);
        //             favModel.eventTime = time;
        //             $('#start-btn').click();
        //         });
        //     });

        // }
        // function addCountdownToList() {
        //     countdownList.push(countdownModel);
        //     saveData();
        // }
        // function setDateTime(time) {
        //     let dateTime = moment(time, "HH:mm");
        //     let dateNow = moment();
        //     if (moment.duration(dateTime.diff(dateNow)) <= 0) {
        //         dateTime.add(1, 'days');  // set timer for next day
        //     }
        //     console.log("dateTime", dateTime);
        //     return dateTime.format('DD.MM.YYYY HH:mm');;
        // }

    </script>

}